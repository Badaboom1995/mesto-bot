// write telegram bot using telegraph
const { Telegraf, Markup, Scenes, session } = require('telegraf');
const {createNavigation} = require('./createNavigation.js');
const {authScene} = require("./scenes/authScene");
const {makeKeyboard} = require("./helpers/MakeInlineKeyboard");


const express = require('express');
const bodyParser = require('body-parser');
const token = '6047089461:AAFLLPE_DHV8XuKP0FRaOhFj15u_QzWTvxc'
const bot = new Telegraf(token);

const stage = new Scenes.Stage([authScene]);
bot.use(session())
bot.use(stage.middleware());

bot.telegram.setWebhook(`https://mesto-bot-c5a62508e033.herokuapp.com/bot${token}`);
const port = process.env.PORT || 3001;
const app = express();
app.use(bodyParser.json());
app.use(bot.webhookCallback(`/bot${token}`));

app.post(`/bot${token}`, (req, res) => {
    res.sendStatus(200);
});
bot.start(async (ctx) => {
    await ctx.reply('–ü—Ä–∏–≤–µ—Ç! –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω—É–∂–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è', makeKeyboard(['–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è'], 1,'auth'));
});
bot.action(/auth(.+)/, async (ctx) => {
    await ctx.answerCbQuery();
    await ctx.scene.enter('authScene');
})
// createNavigation()
bot.on('text', (ctx) => {
    if(ctx.message.text === '/start') return
    if(ctx.message.text === `üí¨ –ß–∞—Ç—ã`) {
        ctx.replyWithHTML(createNavigation())
    }
    if(ctx.message.text === `üìÖ –°–æ–±—ã—Ç–∏—è`){
        ctx.replyWithHTML(`–î–æ–±–∞–≤—å—Ç–µ —Å–µ–±–µ <a href="https://calendar.google.com/calendar/b/1?cid=Mmk4MDJ0azNpbjdyNG0xZXA0amQ1OWoydG9AZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ">–≥—É–≥–ª-–∫–∞–ª–µ–Ω–¥–∞—Ä—å</a> —Å –æ–Ω–ª–∞–π–Ω –∏ –æ—Ñ–ª–∞–π–Ω —Å–æ–±—ã—Ç–∏—è–º–∏ Mesto`)
    }
    if( ctx.message.text === `üë• –õ—é–¥–∏` || ctx.message.text === `‚öôÔ∏è –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç` || ctx.message.text === `‚ùì FAQ` || ctx.message.text === `üèÑ –õ–µ–Ω—Ç–∞`) {
        ctx.reply('–ü–æ–∫–∞ –Ω–µ –≥–æ—Ç–æ–≤–æ, –Ω–æ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç!')
    }
    // console.log(ctx.message.from.id);
    // const userId = ctx.message.from.id;
    // bot.telegram.sendMessage(userId, `${ctx.message.text} from ${ctx.message.from.first_name} in chat ${ctx.message.chat.title}`);
    // ctx.deleteMessage(ctx.message.message_id)
    // block user from sending messages
    // ctx.restrictChatMember(ctx.message.from.id, {can_send_messages: false});
    // ctx.reply(ctx.message.text);
});

bot.on('new_chat_members', (ctx) => {
    const chatId = ctx.chat.id;
    const userId = ctx.message.new_chat_members[0].id;
    const username = ctx.message.new_chat_members[0].username;
})

app.listen(port, () => {
    console.log(`Express server is listening on ${port}`);
});

// bot.launch();




